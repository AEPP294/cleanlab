name: GitHub Pages

on:
  push:
    branches: [master]

  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-20.04
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Install Pandoc
        run: sudo apt-get install pandoc

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Upgrade pip
        run: |
          # install pip=>20.1 to use "pip cache dir"
          python3 -m pip install --upgrade pip

      - name: Get pip cache dir
        id: pip-cache
        run: echo "::set-output name=dir::$(pip cache dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: python3 -m pip install -r docs/requirements.txt

      - name: Run Sphinx with sphinx-multiversion wrapper
        run: sphinx-multiversion docs/source docs/build

      - name: Copy the file that redirects site visit to latest doc
        run: cp docs/source/_templates/gh-pages-redirect.html docs/build/index.html

      - name: Get latest tag
        id: latest_tag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: 1.0.1

      - name: Find and replace "repository_owner"
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "repository_owner"
          replace: ${{ github.repository_owner }}
          include: "docs/build/index.html"

      - name: Find and replace "latest_tag"
        uses: jacobtomlinson/gha-find-replace@v2
        with:
          find: "latest_tag"
          replace: ${{ steps.latest_tag.outputs.tag }}
          include: "docs/build/index.html"

      - name: Deploy
        uses: peaceiris/actions-gh-pages@v3
        # if: ${{ github.ref == 'refs/heads/master' }}
        with:
          deploy_key: ${{ secrets.ACTIONS_DEPLOY_KEY }}
          external_repository: ${{ github.repository_owner }}/cleanlab-docs
          publish_branch: master
          publish_dir: docs/build
