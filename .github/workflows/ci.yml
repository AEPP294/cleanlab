name: CI
on:
  push:
  pull_request:
  schedule:
    - cron: '0 8 * * 6'
jobs:
  test:
    name: "Test: Python ${{ matrix.python }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install development dependencies
        run: pip install -r requirements-dev.txt
      - name: Overwrite tensorflow version on Windows
        if: matrix.os == 'windows-latest'
        run: |
          pip uninstall -y tensorflow
          pip install tensorflow-cpu
      - name: Install cleanlab
        run: pip install -e .
      - name: Test with coverage
        run: pytest --verbose --cov=cleanlab/ --cov-config .coveragerc --cov-report=xml
      - uses: codecov/codecov-action@v2
  test-minimal-dependencies:
    name: "Test: Package runs with non-optional dependencies on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python:
          - "3.10"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install cleanlab
        run: pip install -e .
      - name: Minimal test classification.py
        run: python3 -c "import cleanlab; from cleanlab.classification import CleanLearning; cl = CleanLearning(); print(cl)"
      - name: Minimal test count.py
        run: python3 -c "import cleanlab; from cleanlab.count import num_label_issues; x = num_label_issues(labels=[1,0,0],pred_probs=[[0.2,0.8],[0.9,0.1],[0.5,0.5]]); print(x)"
      - name: Minimal test dataset.py
        run: python3 -c "import cleanlab; from cleanlab.dataset import rank_classes_by_label_quality"
      - name: Minimal test filter.py
        run: python3 -c "import cleanlab; from cleanlab.filter import find_label_issues"
      - name: Minimal test multiannotator.py
        run: python3 -c "import cleanlab; from cleanlab.multiannotator import get_majority_vote_label"
      - name: Minimal test outlier.py
        run: python3 -c "import cleanlab; from cleanlab.outlier import OutOfDistribution; ood = OutOfDistribution(); print(ood)"
      - name: Minimal test rank.py
        run: python3 -c "import cleanlab; from cleanlab.rank import get_self_confidence_for_each_label"
      - name: Minimal test typing.py
        run: python3 -c "import cleanlab; from cleanlab import typing"
  typecheck:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .  # install dependencies
          pip install -r requirements-dev.txt  # install development dependencies and type stubs
      - name: Type check
        run: mypy --install-types --non-interactive --allow-redefinition cleanlab
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
  nblint:
    name: Lint Notebooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: nblint
        run: ./.ci/nblint.py docs
