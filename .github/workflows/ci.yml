name: CI
on:
  push:
  pull_request:
  schedule:
    - cron: '0 8 * * 6'
jobs:
  test:
    name: "Test: Python ${{ matrix.python }} on ${{ matrix.os }}"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        python:
          - "3.6"
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install development dependencies
        run: pip install -r requirements-dev.txt
      - name: Overwrite tensorflow version on Windows
        if: matrix.os == 'windows-latest'
        run: |
          pip uninstall -y tensorflow
          pip install tensorflow-cpu
      - name: Install cleanlab
        run: pip install -e .
      - name: Test with coverage
        run: pytest --verbose --cov=cleanlab/ --cov-config .coveragerc --cov-report=xml
      - uses: codecov/codecov-action@v2
  typecheck:
    name: Type check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install .  # install dependencies
          pip install -r requirements-dev.txt  # install development dependencies and type stubs
      - name: Type check
        run: mypy --install-types --non-interactive cleanlab
  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: psf/black@stable
  check_unused_imports:
    name: Check for unused imports
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Count unused imports
        run: |
          sudo apt install pylint -y
          echo "::set-output name=UNUSED_COUNT::$(pylint * | grep "unused-import" | wc -l)"
        id: unused_check
      - name: Fail job is any unused imports are there
        if: ${{ steps.unused_check.outputs.UNUSED_COUNT > 0 }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Code has unused imports! Please `run pylint * | grep "unused-import"`')
  check_wildcard_imports:
    name: Check for wildcard imports
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Count wildcard imports
        run: |
          sudo apt install pylint -y
          echo "::set-output name=WILDCARD_COUNT::$(pylint * | grep "Wildcard import" | wc -l)"
        id: wildcard_check
      - name: Fail job is any wildcard imports are there
        if: ${{ steps.unused_check.outputs.WILDCARD_COUNT > 0 }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Code has wildcard imports! Please `pylint * | grep "Wildcard import"`')
  nblint:
    name: Lint Notebooks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.10'
      - name: nblint
        run: ./.ci/nblint.py docs
